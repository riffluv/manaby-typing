.gameContainer {
  display: flex;
  flex-direction: column;
  width: 800px;
  height: 600px;
  margin: 0 auto;
  background-color: #0d1117;
  border: 2px solid rgba(255, 140, 0, 0.5);
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.4), inset 0 0 30px rgba(255, 140, 0, 0.1);
  position: relative;
  overflow: hidden;
  color: #e1e1e1;
  font-family: var(--font-normal); /* 変数を使用 */
}

.gameContainer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: linear-gradient(
      rgba(255, 140, 0, 0.03) 1px,
      transparent 1px
    ),
    linear-gradient(90deg, rgba(255, 140, 0, 0.03) 1px, transparent 1px);
  background-size: 20px 20px;
  z-index: 0;
}

.gameHeader {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  padding: 1.2rem 2.5rem;
  background-color: rgba(0, 0, 0, 0.2);
  border-bottom: 1px solid rgba(255, 255, 255, 0.05);
  z-index: 1;
}

.gameScore,
.gameLevel {
  font-size: 1rem;
  font-weight: 600;
  letter-spacing: 1px;
  color: #ff9a28;
  text-shadow: 0px 0px 10px rgba(255, 154, 40, 0.3);
  padding: 0.5rem 1rem;
  background-color: rgba(0, 0, 0, 0.3);
  border-radius: 20px;
  border: 1px solid rgba(255, 154, 40, 0.3);
}

.gameArea {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 1.5rem;
  padding-bottom: 4rem; /* 下部に余白を増やして上方に配置 */
  z-index: 1;
}

.typingArea {
  width: 90%;
  max-width: 700px;
  background-color: rgba(0, 0, 0, 0.25);
  border-radius: 16px;
  padding: 2.5rem;
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2),
    inset 0 0 0 1px rgba(255, 255, 255, 0.05);
  text-align: center;
  border: 1px solid rgba(255, 140, 0, 0.15);
  position: relative;
  transition: box-shadow 0.3s ease, transform 0.2s ease;
  /* 長いテキスト用に高さを自動調整できるようにする */
  display: flex;
  flex-direction: column;
  min-height: 200px;
}

.typingArea:focus-within {
  transform: translateY(-2px);
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3),
    inset 0 0 0 1px rgba(255, 140, 0, 0.3);
}

.problemContainer {
  margin-bottom: 2.5rem;
  /* フレキシブルなレイアウトで高さを確保 */
  display: flex;
  flex-direction: column;
  flex: 1;
}

.typingProblem {
  font-size: 2.25rem;
  margin-bottom: 1.5rem; /* 0.8remから1.5remに変更して間隔を拡げる */
  font-weight: 700;
  letter-spacing: 1px;
  color: #ffffff;
  text-shadow: 0px 2px 10px rgba(0, 0, 0, 0.5);
  line-height: 1.3;
  /* 複数行のテキストをよりよく表示するための設定 */
  width: 100%;
  padding: 0 10px;
  font-family: var(--font-normal); /* 日本語表示用に通常フォントを使用 */
}

.typingText {
  font-size: 1.8rem;
  letter-spacing: 1.5px;
  font-family: var(--font-normal); /* ローマ字表示用に通常フォントを使用 */
  line-height: 1.5; /* 1.3から1.5に変更して行間を広げる */
  min-height: 3.6rem; /* 2.4remから3.6remに変更して最小高さを増やす */
  margin: 0.8rem auto; /* 0.5rem autoから0.8rem autoに変更 */
  padding: 0.8rem; /* 0.5rem 0.8remから0.8remに変更してパディングを均等に */
  background-color: transparent;
  border-radius: 8px;
  display: inline-block;
  min-width: 70%; /* 60%から70%に変更して幅を確保 */
  max-width: 90%;
  position: relative;
  font-weight: 600;
  text-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);
  overflow-wrap: break-word;
  word-break: break-all;
  border: none;
  box-shadow: none;
  /* 長いテキストを適切に表示するための設定 */
  white-space: pre-wrap; /* 改行を維持するが、必要に応じて折り返す */
}

.typingText::before {
  /* ドットを削除 */
  display: none;
}

.completed {
  color: #6aff8b;
  font-weight: 600;
  text-shadow: 0px 0px 8px rgba(106, 255, 139, 0.4);
}

.current {
  color: #4db8ff;
  font-weight: 600;
  border-bottom: 2px solid #4db8ff;
  animation: blink 1.2s infinite;
  padding-bottom: 2px;
  text-shadow: 0px 0px 8px rgba(77, 184, 255, 0.4);
}

/* 未確定のローマ字（薄い青色） */
.pending {
  color: #7fbfff; /* より薄い青色 */
  font-weight: 500; /* 少し薄めのフォント */
  text-shadow: 0px 0px 6px rgba(127, 191, 255, 0.3);
}

.error {
  color: #ff6b6b;
  animation: shake 0.3s;
  text-shadow: 0px 0px 8px rgba(255, 107, 107, 0.4);
}

/* ミスの振動アニメーション - よりスムーズに */
.errorShake {
  animation: errorShake 0.3s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
}

@keyframes errorShake {
  0%,
  100% {
    transform: translateX(0);
  }
  20%,
  60% {
    transform: translateX(-5px);
  }
  40%,
  80% {
    transform: translateX(5px);
  }
}

@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

.hiddenInput {
  opacity: 0;
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.gameControls {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem;
  border-top: 1px solid rgba(255, 255, 255, 0.05);
  z-index: 1;
}

.controlButton {
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  border: 2px solid #ff8c00;
  padding: 0.8rem 1.5rem;
  font-size: 0.9rem;
  border-radius: 30px;
  cursor: pointer;
  transition: all 0.2s;
  box-shadow: 0 0 8px rgba(255, 140, 0, 0.3),
    inset 0 0 10px rgba(255, 140, 0, 0.1);
}

.controlButton:hover {
  background-color: rgba(255, 140, 0, 0.15);
  transform: translateY(-2px);
}

.controlButton:active {
  transform: translateY(1px);
}

/* ゲーム結果のスタイル強化 */
.clearStats {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin: 20px auto;
  max-width: 300px;
}

.statRow {
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-bottom: 1px solid rgba(255, 140, 0, 0.15);
  padding-bottom: 8px;
  margin-bottom: 4px;
}

.statIcon {
  width: 40px;
  text-align: center;
}

.statLabel {
  flex: 1;
  text-align: left;
  font-size: 0.9rem;
  color: #e1e1e1;
}

.statValue {
  min-width: 80px;
  text-align: right;
  font-weight: bold;
  font-size: 1.1rem;
  color: #ffcc00;
}

.statEmoji {
  font-size: 1.5rem;
}

.clearRank {
  font-size: 4rem;
  font-weight: bold;
  color: #ffd700;
  text-shadow: 0 0 15px rgba(255, 215, 0, 0.5);
  margin: 20px 0;
  position: relative;
}

.rankLabel {
  font-size: 1rem;
  display: block;
  margin-top: 5px;
  color: #ffffff;
}

.buttonContent {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.buttonIcon {
  font-size: 1.2rem;
}

.buttonText {
  font-size: 0.9rem;
}

/* ローディングコンテナのスタイル */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
}

.loadingText {
  color: #ff8c00;
  font-size: 18px;
  text-align: center;
  margin-top: 20px;
  animation: blink 1.5s infinite;
}

@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

.escGuide {
  position: absolute;
  left: 20px;
  bottom: 20px;
  font-size: 0.8rem;
  color: rgba(255, 255, 255, 0.7);
  background-color: rgba(0, 0, 0, 0.4);
  padding: 8px 12px;
  border-radius: 20px;
  font-weight: 500;
  letter-spacing: 0.5px;
  display: flex;
  align-items: center;
  gap: 6px;
  backdrop-filter: blur(5px);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  transform: translateY(0);
  transition: all 0.3s ease;
  z-index: 10;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.escGuide::before {
  content: 'ESC';
  background-color: rgba(255, 140, 0, 0.2);
  color: #ff9a28;
  padding: 2px 6px;
  border-radius: 4px;
  font-weight: 700;
  font-size: 0.75rem;
  border: 1px solid rgba(255, 140, 0, 0.3);
}

.escGuide:hover {
  transform: translateY(-2px);
  background-color: rgba(0, 0, 0, 0.5);
}

/* IMEガイド表示のスタイル */
.imeGuide {
  margin-top: 20px;
  padding: 8px 12px;
  background-color: rgba(0, 0, 0, 0.5);
  border: 1px solid rgba(255, 140, 0, 0.2);
  border-radius: 6px;
  color: #fff;
  font-size: 0.9rem;
  text-align: center;
  animation: fadeInUp 0.5s ease-out;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

.keyboardShortcut {
  margin-left: 8px;
  color: #ff9a28;
  font-weight: bold;
  padding: 2px 5px;
  border-radius: 3px;
  background-color: rgba(0, 0, 0, 0.3);
  font-size: 0.8rem;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 進行状況バーのスタイル */
.progressContainer {
  position: absolute;
  bottom: 80px;
  left: 50%;
  transform: translateX(-50%);
  width: 60%;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
}

.progressBar {
  width: 100%;
  height: 6px;
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 3px;
  overflow: hidden;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}

.progressFill {
  height: 100%;
  background: linear-gradient(90deg, #ff9a28, #ffcc00);
  border-radius: 3px;
  transition: width 0.3s ease-out;
  box-shadow: 0 0 8px rgba(255, 154, 40, 0.5);
}

.progressText {
  font-size: 0.8rem;
  color: rgba(255, 255, 255, 0.7);
  letter-spacing: 1px;
}

/* 次の問題ヒント */
.nextProblemHint {
  position: absolute;
  right: 20px;
  bottom: 70px;
  background-color: rgba(0, 0, 0, 0.4);
  border-radius: 8px;
  padding: 8px 12px;
  font-size: 0.8rem;
  color: rgba(255, 255, 255, 0.6);
  max-width: 180px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  border: 1px solid rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(5px);
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.nextProblemHint.visible {
  opacity: 1;
  transform: translateY(0);
}

.nextProblemLabel {
  color: #ff9a28;
  font-weight: 600;
  font-size: 0.7rem;
  margin-bottom: 3px;
  display: block;
  text-transform: uppercase;
  letter-spacing: 1px;
}

/* タイピングマニア風のカーソルスタイル */
.typingCursor {
  display: inline-block;
  width: 2px;
  height: 1.5em;
  background-color: rgba(255, 140, 0, 0.8);
  vertical-align: middle;
  margin-left: 0.2em;
  animation: cursorBlink 1s infinite;
  position: relative;
  top: -0.1em;
}

@keyframes cursorBlink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.3;
  }
}

/* 次の入力文字の強調表示 - タイピングマニア風 */
.nextCharHighlight {
  position: relative;
  color: #d0d0d0;
  text-shadow: 0 0 4px rgba(255, 255, 255, 0.5);
  font-weight: 600;
}

/* ドットフォントを使用したい箇所の追加クラス */
.dotFontText {
  font-family: var(--font-dot);
  -webkit-font-smoothing: none;
  -moz-osx-font-smoothing: none;
}

/* 見出し用ドットフォントクラス */
.dotHeading {
  font-family: var(--font-dot);
  -webkit-font-smoothing: none;
  -moz-osx-font-smoothing: none;
}

/* Canvas描画用のスタイル */
.canvasTypingContainer {
  width: 100%;
  min-height: 80px;
  position: relative;
  margin: 0.8rem auto;
  display: flex;
  align-items: center;
  justify-content: center;
}

.typingCanvas {
  display: block;
  width: 100%;
  height: 100%;
  border-radius: 8px;
}
