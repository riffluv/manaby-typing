"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[529],{2201:(t,e,o)=>{o.d(e,{aF:()=>i});var s=o(9509);let n=()=>{let t=void 0!==s&&s.env&&("1"===s.env.VERCEL||"production"===s.env.NEXT_PUBLIC_VERCEL_ENV),e=window.location&&(window.location.hostname.includes("vercel.app")||"manaby-typing.vercel.app"===window.location.hostname);return window.location&&console.log("Vercel環境検出:",{isVercel:t,isVercelUrl:e,hostname:window.location.hostname}),t||e},i=t=>{if(!t)return"";let e=t.startsWith("/")?t:"/".concat(t),o=e.split("/"),s=o[o.length-1];o[o.length-1]=encodeURIComponent(s);let i=o.join("/");t.includes(".mp3")&&console.log("処理前のパス: ".concat(t,", 正規化後: ").concat(e,", エンコード後: ").concat(i));let c=window.location&&window.location.hostname.includes("github.io")||window.location.href.includes("github.io");console.log("環境情報:",{isProduction:!0,isGitHubPages:c,hostname:window.location?window.location.hostname:"不明",href:window.location?window.location.href:"不明",basePath:"/manaby-typing"});let a="/manaby-typing";n()?(a="",console.log("Vercel環境を検出: ベースパスを空に設定")):a||console.warn("NEXT_PUBLIC_BASE_PATH未設定、デフォルト値を使用:",a="/manaby-typing");let l="".concat(a).concat(i);if(t.includes(".mp3")){let e=new Image;e.onerror=()=>{if(t.includes("Hit")||t.includes("hit")){let e=t.includes("Hit")?t.replace("Hit","hit"):t.replace("hit","Hit");console.log("ファイルが見つからないため代替パスを試行: ".concat(e)),l="".concat(a).concat(e.startsWith("/")?e:"/".concat(e))}},e.src=l}return(t.includes(".mp3")||t.includes("sound"))&&console.log("StaticPath - 入力: ".concat(t,", 出力: ").concat(l,", 環境: ","production",", GitHub Pages: ").concat(c)),l}},9529:(t,e,o)=>{o.d(e,{A:()=>l});var s=o(2201),n=o(9509);let i=!1;window.__DEBUG_STATIC_PATH=!1,window.location&&window.location.hostname.includes("github.io")&&(i=!0,window.__DEBUG_STATIC_PATH=!0,console.log("GitHub Pages環境を検出、拡張デバッグログを有効化します"));let c={debug:function(t){for(var e=arguments.length,o=Array(e>1?e-1:0),s=1;s<e;s++)o[s-1]=arguments[s];i&&console.log("[SoundDebug]",t,...o)}};class a{_getSoundPathWithFallback(t,e){let o=(0,s.aF)("/sounds/".concat(t)),i=(0,s.aF)("/sounds/".concat(e));return void 0!==n&&n.env&&"1"===n.env.VERCEL?(console.log("Vercel環境検出: ".concat(i," を使用")),i):(console.log("非Vercel環境: ".concat(o," を使用")),o)}_loadSettingsFromStorage(){if(window.localStorage)try{let t=localStorage.getItem("sound_bgmEnabled");null!==t&&(this.bgmEnabled="true"===t);let e=localStorage.getItem("sound_bgmVolume");null!==e&&(this.bgmVolume=parseFloat(e));let o=localStorage.getItem("sound_sfxEnabled");null!==o&&(this.sfxEnabled="true"===o);let s=localStorage.getItem("sound_sfxVolume");null!==s&&(this.volume=parseFloat(s)),c.debug("ローカルストレージから音声設定を読み込みました",{bgmEnabled:this.bgmEnabled,bgmVolume:this.bgmVolume,sfxEnabled:this.sfxEnabled,sfxVolume:this.volume})}catch(t){console.error("設定の読み込みに失敗しました:",t)}}_saveSettingsToStorage(){}_handleUserInteraction(){if(!this.userInteracted&&(this.userInteracted=!0,c.debug("ユーザーインタラクションを検知しました"),this.context&&"suspended"===this.context.state&&this.context.resume().catch(t=>{console.error("AudioContextの再開に失敗:",t)}),this.pendingBgm)){let{name:t,loop:e}=this.pendingBgm;c.debug("保留中のBGM「".concat(t,"」を再生します")),this._playBgmInternal(t,e),this.pendingBgm=null}}async initializeAllSounds(){try{let t=[];for(let t of(console.log("サウンドプリセット:",{success:this.soundPresets.success,error:this.soundPresets.error,button:this.soundPresets.button,complete:this.soundPresets.complete}),["success","error"]))if(this.soundPresets[t])try{await this.loadSound(t,this.soundPresets[t]),console.log("優先".concat(t,"音声のロードに成功しました"))}catch(e){console.error("優先".concat(t,"音声のロードに失敗しました:"),e)}for(let e of["button","complete"])this.soundPresets[e]&&t.push(this.loadSound(e,this.soundPresets[e]).then(()=>console.log("".concat(e,"音声のロードに成功しました"))).catch(t=>console.error("".concat(e,"音声のロードに失敗しました:"),t)));return await Promise.all(t),console.log("基本的な効果音のロードが完了しました"),!0}catch(t){return console.error("効果音の初期化に失敗しました:",t),!1}}async loadSound(t,e){try{let o=t.toLowerCase();console.log("サウンド「".concat(t,"」をロード中: ").concat(e)),console.log("".concat(t,"の読み込み開始: ").concat(e));let s=await fetch(e);if(!s.ok){let o;console.warn("".concat(t,"のロードに失敗 (").concat(s.status,")。代替URLで再試行..."));let n=e.split("/"),i=n[n.length-1];if(i.startsWith("hit")&&i.endsWith(".mp3")){o="H"+i.substring(1),n[n.length-1]=o;let t=n.join("/")+"?t=".concat(this.timestamp);console.log("代替URL試行: ".concat(t)),s=await fetch(t)}}if(!s.ok)throw console.error("".concat(t,"のHTTPエラー:"),s.status,s.statusText),Error("HTTP error! status: ".concat(s.status,", url: ").concat(e));console.log("".concat(t,"のレスポンス取得成功"));let n=await s.arrayBuffer();return console.log("".concat(t,"のバッファ取得成功:"),n.byteLength,"bytes"),new Promise((e,s)=>{try{this.context.decodeAudioData(n,s=>{this.sfxBuffers[o]=s,console.log("サウンド「".concat(t,"」のロード・デコード完了")),e()},e=>{console.error("サウンド「".concat(t,"」のデコードに失敗:"),e),s(e)})}catch(e){console.error("サウンド「".concat(t,"」のデコード処理例外:"),e),s(e)}})}catch(e){return console.error("効果音「".concat(t,"」のロード中にエラー発生:"),e),this.sfxBuffers[t.toLowerCase()]=null,Promise.resolve()}}playSound(t){if(!this.sfxEnabled)return;let e=t.toLowerCase();try{if("success"===e||"error"===e||"miss"===e){let t=Date.now();this._lastPlayTimes||(this._lastPlayTimes={});let o=this._lastPlayTimes[e]||0;if(t-o<3)return;if(this._lastPlayTimes[e]=t,this.sfxBuffers[e])return void this._fastPlayBuffer(this.sfxBuffers[e])}else{let t=Date.now();this._lastPlayTimes||(this._lastPlayTimes={});let o=this._lastPlayTimes[e]||0;if(t-o<20)return;this._lastPlayTimes[e]=t}if(this.sfxBuffers[e])return void this._playBuffer(this.sfxBuffers[e]);this.context&&"suspended"===this.context.state&&this.context.resume().catch(t=>console.warn("AudioContext再開失敗:",t));let o=Object.keys(this.soundPresets).find(t=>t.toLowerCase()===e);if(o){let s=this.soundPresets[o];console.log("".concat(t,"サウンド自動ロード開始:"),s),this.loadSound(e,s).then(()=>{console.log("".concat(t,"サウンドのロードに成功、再生を試みます")),this.sfxBuffers[e]&&this._playBuffer(this.sfxBuffers[e])}).catch(e=>{console.error("".concat(t,"サウンドのロードに失敗:"),e)})}else console.warn("未知のサウンド名が指定されました: ".concat(t))}catch(t){console.error("プレイサウンドエラー:",t)}}_fastPlayBuffer(t){if(this.context&&t)try{let e=this.context.createBufferSource();return e.buffer=t,e.connect(this.gainNode),e.start(0),!0}catch(t){return!1}}play(t){return this.playSound(t)}_playBuffer(t){if(this.context){if(!t)return void console.warn("再生しようとしたバッファが存在しません");try{"suspended"===this.context.state&&this.context.resume().catch(t=>(console.warn("AudioContext再開に失敗(1回目):",t),this.context.resume().catch(t=>(console.warn("AudioContext再開に失敗(2回目):",t),this.context.resume().catch(t=>{console.error("AudioContext再開に失敗(最終):",t)})))));let e=this.context.createBufferSource();return e.buffer=t,e.connect(this.gainNode),e.start(0),e.onended=()=>{e.disconnect()},!0}catch(e){return console.error("効果音の再生に失敗:",{error:e.toString(),contextState:this.context?this.context.state:"unknown",bufferSize:t?t.length:"null",stack:e.stack}),!1}}}setSfxVolume(t){this.gainNode&&(this.volume=Math.max(0,Math.min(1,t)),this.sfxEnabled&&(this.gainNode.gain.value=this.volume),c.debug("効果音の音量を設定: ".concat(this.volume)))}setSfxEnabled(t){this.gainNode&&(this.sfxEnabled=t,this.gainNode.gain.value=t?this.volume:0,c.debug("効果音を".concat(t?"有効":"無効","にしました")))}setEnabled(t){this.setSfxEnabled(t),this.setBgmEnabled(t)}setBgmVolume(t){this.bgmVolume=Math.max(0,Math.min(1,t)),this.bgmElement&&(this.bgmElement.volume=this.bgmEnabled?this.bgmVolume:0),c.debug("BGMの音量を設定: ".concat(this.bgmVolume))}setBgmEnabled(t){this.bgmEnabled=t,this.bgmElement&&(t?(this.bgmElement.volume=this.bgmVolume,this.bgmElement.paused&&this.resumeBgm()):this.bgmElement.pause()),c.debug("BGMを".concat(t?"有効":"無効","にしました"))}resume(){this.context&&"suspended"===this.context.state&&this.context.resume()}playBgm(t){let e=!(arguments.length>1)||void 0===arguments[1]||arguments[1];if(this.bgmEnabled&&(this.currentBgm!==t||!this.bgmElement||this.bgmElement.paused)){if(this.stopBgm(),!this.bgmPresets[t])return void console.error("BGM「".concat(t,"」はプリセットに存在しません"));if(!this.userInteracted){c.debug("BGM「".concat(t,"」は保留状態にセットされました。ユーザーインタラクション後に再生されます")),this.pendingBgm={name:t,loop:e};return}this._playBgmInternal(t,e)}}_playBgmInternal(t,e){try{let o=this.bgmPresets[t];if(!o)throw Error("BGM「".concat(t,"」はプリセットに存在しません"));let s=new Audio(o);s.loop=e,s.volume=this.bgmVolume,this.context&&"suspended"===this.context.state&&this.context.resume().catch(t=>{console.error("AudioContextの再開に失敗:",t)});let n=s.play();void 0!==n&&n.catch(o=>{console.error("BGM「".concat(t,"」の再生開始に失敗:"),o),this.pendingBgm||(this.pendingBgm={name:t,loop:e},c.debug("BGM「".concat(t,"」が自動再生ポリシーでブロックされました。保留状態に設定しました")))}),this.currentBgm=t,this.bgmElement=s,c.debug("BGM「".concat(t,"」を再生開始しました"))}catch(e){console.error("BGM「".concat(t,"」の再生に失敗:"),e)}}pauseBgm(){this.bgmElement&&!this.bgmElement.paused&&(this.bgmElement.pause(),c.debug("BGM「".concat(this.currentBgm,"」を一時停止しました")))}resumeBgm(){if(this.bgmElement&&this.bgmElement.paused&&this.bgmEnabled){let t=this.bgmElement.play();void 0!==t&&t.catch(t=>{console.error("BGM「".concat(this.currentBgm,"」の再開に失敗:"),t)}),c.debug("BGM「".concat(this.currentBgm,"」を再開しました"))}}stopBgm(){this.bgmElement&&(this.bgmElement.pause(),this.bgmElement.currentTime=0,this.bgmElement=null,c.debug("BGM「".concat(this.currentBgm,"」を停止しました")),this.currentBgm=null)}getCurrentBgm(){return this.currentBgm}getSfxVolume(){return this.volume}getBgmVolume(){return this.bgmVolume}isSfxEnabled(){return this.sfxEnabled}isBgmEnabled(){return this.bgmEnabled}async checkSoundFileExists(t){try{return(await fetch(t,{method:"HEAD"})).ok}catch(e){return console.warn("ファイル存在確認エラー (".concat(t,"):"),e),!1}}getVersionInfo(){return{version:"1.0.1",buildDate:"2025-05-14",environment:"production",basePath:"/manaby-typing",useMCP:!1,audioContext:this.context?{state:this.context.state,sampleRate:this.context.sampleRate}:"なし"}}async diagnoseAudioSystem(){let t={audioContext:!!this.context,contextState:this.context?this.context.state:"none",userInteracted:this.userInteracted,sfxEnabled:this.sfxEnabled,gainValue:this.gainNode?this.gainNode.gain.value:"none",loadedBuffers:Object.keys(this.sfxBuffers),fileChecks:{}};for(let e of["success","error","button","complete"]){let o=this.soundPresets[e];o&&(t.fileChecks[e]={url:o,exists:await this.checkSoundFileExists(o)})}return t}getAudioContext(){return this.context}constructor(){{let t=window.AudioContext||window.webkitAudioContext;this.context=new t,this.gainNode=this.context.createGain(),this.gainNode.connect(this.context.destination),this.bgmGainNode=this.context.createGain(),this.bgmGainNode.connect(this.context.destination)}this.sfxBuffers={},this.currentBgm=null,this.bgmElement=null,this.bgmVolume=.5,this.bgmEnabled=!0,this.pendingBgm=null,this.userInteracted=!1,this.volume=1,this.sfxEnabled=!0,this.soundPresets={success:(0,s.aF)("/sounds/hit05-1.mp3"),error:(0,s.aF)("/sounds/hit04-1.mp3"),complete:(0,s.aF)("/sounds/resultsound.mp3"),button:(0,s.aF)("/sounds/buttonsound1.mp3")},console.log("環境情報:",{NODE_ENV:"production",basePath:"/manaby-typing",例示パス:(0,s.aF)("/sounds/test.mp3")}),this.bgmPresets={lobby:(0,s.aF)("/sounds/battle_of_the_emperor.mp3"),battle:(0,s.aF)("/sounds/battle.mp3")},this.timestamp=Date.now(),["mousedown","keydown","touchstart","click"].forEach(t=>{window.addEventListener(t,this._handleUserInteraction.bind(this),{once:!1,passive:!0})}),c.debug("サウンドシステム初期化完了")}}let l=new a}}]);